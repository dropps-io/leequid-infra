# https://github.com/lukso-network/network-docker-containers/blob/main/docker-compose.yml
# https://geth.ethereum.org/docs/fundamentals/command-line-options
# https://github.com/ethereum/go-ethereum
# https://github.com/lukso-network/network-docker-containers/blob/main/.env.example
# https://github.com/lukso-network/network-configs/blob/main/mainnet/geth/geth.toml
# https://github.com/lukso-network/network-configs

#8 Gio beacon
#6 Gio exec
#2 Gio validator

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: leequid
  namespace: testnet
  labels:
    app: leequid
    chain: lukso
  annotations: {}
spec:
  replicas: 2
  serviceName: leequid
  selector:
    matchLabels:
      app: leequid
      chain: lukso
  template:
    metadata:
      labels:
        app: leequid
        chain: lukso
    spec:
      initContainers:
        - name: init
          image: europe-west1-docker.pkg.dev/leequid/leequid/init
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              #!/bin/bash
              set -e
              
              [ ! -d "/data/network-configs" ] && gsutil -m cp -r gs://$BUCKET/$NETWORK/network-configs /data
              [ ! -d "/data/execution_data" ] && geth --datadir=/data/execution_data init /data/network-configs/genesis.json
              
              if [ ! -d "/data/wallet/prysm" ]; then
                echo -e "\n>>> Generate keystore and mnemonic [num_validators=$VALIDATOR_PER_NODE]"
                lukso-key-gen-cli --language English new-mnemonic --mnemonic_language English --chain lukso \
                  --num_validators $VALIDATOR_PER_NODE \
                  --keystore_password $(cat /var/run/secrets/WALLET_SECRET) \
                  --folder /tmp \
                  --mnemonic_file /tmp/mnemonic.txt
                
                echo -e "\n>>> Import validator accounts"
                validator accounts import \
                  --keys-dir=/tmp/validator_keys \
                  --wallet-dir=/data/wallet/prysm \
                  --wallet-password-file=/var/run/secrets/WALLET_SECRET \
                  --account-password-file=/var/run/secrets/WALLET_SECRET \
                  --accept-terms-of-use
              
                echo -e "\n>>> Save deposit_data.json to bucket"
                gsutil -m cp /tmp/validator_keys/deposit_data* gs://$BUCKET/$NETWORK/deposit/${NODE_NAME}-deposit-data.json
                
                echo -e "\n>>> Create secret for mnemonic"
                gcloud secrets create ${ENV}-${NETWORK}-${NODE_NAME}-mnemonic --data-file=/tmp/mnemonic.txt
              
                echo -e "\n>>> Remove keystore and mnemonic"
                rm -rf /tmp/mnemonic.txt /tmp/validator_keys
              fi
              
              echo "Init Success"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VALIDATOR_PER_NODE
              value: "2"
            - name: NETWORK
              value: "testnet"
            - name: ENV
              value: "prod"
            - name: BUCKET
              value: "leequid-prod-lukso"
          volumeMounts:
            - name: data
              mountPath: /data
            - name: secrets
              mountPath: /var/run/secrets

      containers:
        ## EXEC:GETH
        - name: exec
          image: ethereum/client-go:v1.11.6
          command: [ "/bin/sh", "-c" ]
          args:
            - geth --config /configs/geth.toml --ethstats "dropps-$(NODE_NAME):$(ETH_STATS_SECRET)@$(ETH_STATS_ADDRESS)"
              --verbosity 2
          ports:
            - name: http
              containerPort: 8545
              protocol: TCP
            - name: ws
              containerPort: 8546
              protocol: TCP
            - name: sync
              containerPort: 30303
              protocol: TCP
            - name: discovery
              containerPort: 30303
              protocol: UDP
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETH_STATS_ADDRESS
              value: "stats.execution.testnet.lukso.network"

            # SECRETS
            - name: ETH_STATS_SECRET
              valueFrom:
                secretKeyRef:
                  name: leequid
                  key: ETH_STATS_SECRET
                  optional: true
  #        securityContext:
  #          allowPrivilegeEscalation: false
  #          runAsNonRoot: true
          volumeMounts:
            - name: data
              mountPath: /data
            - name: conf
              mountPath: /configs
              readOnly: true
            - name: secrets
              mountPath: /var/run/secrets
              readOnly: true
#          resources:
#            requests:
#              memory: 4Gi
#            limits:
#              memory: 4Gi

        ## CONSENSUS:PRYSM (BEACON CHAIN)
        - name: beacon
          image: prysmaticlabs/prysm-beacon-chain:v4.0.5
          args:
            - --config-file=/configs/prysm.yaml
            - --datadir=/data/consensus_data
            - --verbosity=warn
          volumeMounts:
            - name: data
              mountPath: /data
            - name: conf
              mountPath: /configs
              readOnly: true
#          resources:
#            requests:
#              memory: 6Gi
#            limits:
#              memory: 6Gi

        ## VALIDATOR:PRYSM
        - name: validator
          image: prysmaticlabs/prysm-validator:v4.0.5
          args:
            - --config-file=/configs/prysm.yaml
            - --datadir=/data/validator_data
            - --verbosity=warn
          volumeMounts:
            - name: data
              mountPath: /data
            - name: conf
              mountPath: /configs
              readOnly: true
            - name: secrets
              mountPath: /var/run/secrets
              readOnly: true
#          resources:
#            requests:
#              memory: 4Gi
#            limits:
#              memory: 4Gi

      volumes:
        - name: conf
          configMap:
            name: leequid
        - name: secrets
          secret:
            secretName: leequid
#      securityContext:
#        fsGroup: 1000
#        runAsUser: 1000
#        runAsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: leequid
          chain: lukso
      spec:
        storageClassName: premium-rwo
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: leequid
  namespace: testnet
  labels:
    app: leequid
    chain: lukso
data:
  geth.toml: |
    [Eth]
    NetworkId = 4201
    
    [Eth.Miner]
    GasCeil = 42000000
    GasPrice = 2200000000 # 2.2 Gwei
    
    [Node]
    DataDir = "/data/execution_data"
    
    [Node.P2P]
    BootstrapNodes = ["enode://c2bb19ce658cfdf1fecb45da599ee6c7bf36e5292efb3fb61303a0b2cd07f96c20ac9b376a464d687ac456675a2e4a44aec39a0509bcb4b6d8221eedec25aca2@34.141.196.212:30303","enode://4cee52dc3cdc0f9466d40354c0ae038b561eff0409f01092d44d692f35797a0f3e796481c5ad1ca9afb4ea00dcceaaddbf3a79ec311221bfad3567ba347e329b@34.91.156.224:30303"]
    BootstrapNodesV5 = []
    
    StaticNodes = []
    TrustedNodes = []
    
    NoDiscovery = false
    DiscAddr = ""
    EnableMsgEvents = false

  prysm.yaml: |
    chain-config-file: '/data/network-configs/config.yaml'
    genesis-state: '/data/network-configs/genesis.ssz'
    jwt-secret: '/data/execution_data/geth/jwtsecret'
    wallet-dir: '/data/wallet/prysm'
    wallet-password-file: '/var/run/secrets/WALLET_SECRET'
    suggested-fee-recipient: '0x859aC430475116A70E022860E44847bEB4ff8159'
    
    checkpoint-sync-url: https://checkpoints.testnet.lukso.network
    genesis-beacon-api-url: https://checkpoints.testnet.lukso.network
    
    min-sync-peers: 0
    monitoring-host: '0.0.0.0'
    grpc-gateway-host: '0.0.0.0'
    rpc-host: '0.0.0.0'
    p2p-host-ip: '0.0.0.0'
    p2p-max-peers: 250
    subscribe-all-subnets: true
    minimum-peers-per-subnet: 0
    block-batch-limit: 512
    block-batch-limit-burst-factor: 10
    accept-terms-of-use: true
    
    bootstrap-node: ['enr:-MK4QHfHBBWZqSIxumgMmdC3zd7QyJD2shEXBhSKbay3aYwdAHrhb3lksHStJPk1tLoFOPaU4ELtaahRGUUpfm5tmhCGAYfiNvG0h2F0dG5ldHOIAAAAAAAAAACEZXRoMpBWKoojQgEABCoAAAAAAAAAgmlkgnY0gmlwhCKNxNSJc2VjcDI1NmsxoQOLhdJYX4WgjYXPw6GpCkuxnNWvM0KE_aeYzek95q2f-IhzeW5jbmV0cwCDdGNwgjLIg3VkcIIu4A','enr:-MK4QFMyHkysTsF5G_3RkLlbpTKoaUGvIFEvarfJzDbp3vG1e7CN3lFiv_qgmzgGlzvIlqwylyuf-cPoujbazf12lFWGAYfiNzAwh2F0dG5ldHOIAAAAAAAAAACEZXRoMpBWKoojQgEABCoAAAAAAAAAgmlkgnY0gmlwhCJbnOCJc2VjcDI1NmsxoQNJVMzZTEVTxnbB09WzQkNxasPyQSb8XPLQT0LlExuVNIhzeW5jbmV0cwCDdGNwgjLIg3VkcIIu4A']

#---
#kind: Service
#apiVersion: v1
#metadata:
#  name: leequid
#  labels:
#    app: leequid
#    chain: lukso
#spec:
#  selector:
#    app: leequid
#    chain: lukso
#  ports:
#    - protocol: TCP
#      port: 80
#      targetPort: 80
