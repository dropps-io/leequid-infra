apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "staking.fullname" . }}
  labels:
    {{- include "staking.labels" . | nindent 4 }}
data:
  init.sh: |
    #!/bin/bash
    set -e

    {{- if .Values.externalIPs }}
    echo -e ">> Get external IP from GCP"
    EXTERNAL_IP=$(dig +short ${NODE_NAME}.leequid.org)
    echo "export EXTERNAL_IP=$EXTERNAL_IP" > /data/init.env
    cat /data/init.env
    {{- end }}

    echo -e ">> Get network-configs from Github"
    if [ ! -d "/data/network-configs" ]; then
      dir="/data/network-configs"
      url="https://raw.githubusercontent.com/lukso-network/network-configs/main/$NETWORK/shared"
      mkdir $dir
      curl -L $url/config.yaml -o $dir/config.yaml
      curl -L $url/${GENESIS}.json -o $dir/${GENESIS}.json
      curl -L $url/${GENESIS}.ssz -o $dir/${GENESIS}.ssz
    fi
    echo -e "\n>> Init Geth"
    [ ! -d "/data/execution_data" ] && geth --datadir=/data/execution_data init /data/network-configs/${GENESIS}.json

    {{- if .Values.validator.enabled  }}
    echo -e "\n>> Get WALLET_PASSWORD from Google Secret Manager"
    secret_id=${ENV}-${NETWORK}-leequid-wallet-password
    gcloud secrets versions access latest --secret $secret_id --project $GSM_PROJECT > /var/run/secrets/WALLET_PASSWORD

    echo -e "\n>> Download prysm wallet from bucket to /data/wallet/prysm/direct/accounts"
    gsutil cp gs://${GSM_PROJECT}-${ENV}-wallets/${NETWORK}/${NODE_NAME}-wallet-file.json /data/wallet/prysm/direct/accounts/all-accounts.keystore.json
    {{- end }}

    echo "Init Success"

  exec.sh: |
    #!/bin/sh
    set -e

    [ -f "/data/init.env" ] && source /data/init.env
    geth --config /configs/geth.toml \
      --ethstats "dropps-${NODE_NAME}:${ETH_STATS_SECRET}@stats.execution.${NETWORK}.lukso.network" \
      {{- if .Values.externalIPs }}
      --nat extip:$EXTERNAL_IP \
      {{- end }}
      --verbosity {{ .Values.configmap.geth.verbosity }}

  beacon.sh: |
    #!/bin/bash
    set -e

    [ -f "/data/init.env" ] && source /data/init.env
    beacon-chain \
      --config-file=/configs/prysm.yaml \
      {{- if .Values.externalIPs }}
      --p2p-host-ip=$EXTERNAL_IP \
      {{- end }}
      --datadir=/data/consensus_data

  validator.sh: |
    #!/bin/bash
    set -e

    validator \
      --config-file=/configs/prysm.yaml \
      --datadir=/data/validator_data

  geth.toml: |
    [Eth]
    NetworkId = {{ .Values.configmap.geth.networkId }}

    [Eth.Miner]
    GasCeil = 42000000
    GasPrice = 100000000 # 0.1 Gwei

    [Node]
    DataDir = "/data/execution_data"
    IPCPath = ""
    HTTPHost = "0.0.0.0"
    HTTPModules = ["net", "web3", "eth"]
    HTTPCors = ["*"]
    HTTPVirtualHosts = ["*"]

    [Node.P2P]
    MaxPeers = 50
    BootstrapNodes = [{{ .Values.configmap.geth.bootstrapNodes | join "," }}]
    BootstrapNodesV5 = []
    StaticNodes = []
    TrustedNodes = []

    [Metrics]
    Enabled = false
    HTTP = "0.0.0.0"

  prysm.yaml: |
    chain-config-file: '/data/network-configs/config.yaml'
    genesis-state: '/data/network-configs/{{ .Values.env.GENESIS }}.ssz'
    jwt-secret: '/data/execution_data/geth/jwtsecret'
    wallet-dir: '/data/wallet/prysm'
    wallet-password-file: '/var/run/secrets/WALLET_PASSWORD'
    suggested-fee-recipient: {{ .Values.configmap.prysm.suggestedFeeRecipient | squote }}

    checkpoint-sync-url: https://checkpoints.{{ .Values.env.NETWORK }}.lukso.network
    genesis-beacon-api-url: https://checkpoints.{{ .Values.env.NETWORK }}.lukso.network

    slots-per-archive-point: {{ .Values.configmap.prysm.slotsPerArchivePoint }}

    min-sync-peers: 0
    monitoring-host: '0.0.0.0'
    grpc-gateway-host: '0.0.0.0'
    rpc-host: '0.0.0.0'
    p2p-host-ip: '0.0.0.0'
    p2p-max-peers: 250
    p2p-udp-port: 12000
    subscribe-all-subnets: true
    minimum-peers-per-subnet: 0
    block-batch-limit: 512
    block-batch-limit-burst-factor: 10
    accept-terms-of-use: true
    verbosity: {{ .Values.configmap.prysm.verbosity }}

    bootstrap-node:
      {{- range .Values.configmap.prysm.bootstrapNodes }}
      - {{ . | squote }}
      {{- end }}
